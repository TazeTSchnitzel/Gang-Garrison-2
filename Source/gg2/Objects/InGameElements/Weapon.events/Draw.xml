<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xviewoffset = view_xview[0];
yviewoffset = view_yview[0];
xviewsize = view_wview[0];
yviewsize = view_hview[0];
    
if (distance_to_point(xviewoffset+xviewsize/2,yviewoffset+yviewsize/2) &gt; 800)
    exit;

var offset;
if(justShot == true)
{
    offset=2;
    justShot = false;
}
else
    offset = 0;

if (object_index != SentryTurret)
{    
    if (!owner.invisible and !owner.taunting and !owner.omnomnomnom and !owner.player.humiliated)
    {
        if (!owner.cloak)
            image_alpha = power(owner.cloakAlpha, 0.5);
        else
            image_alpha = power(owner.cloakAlpha, 2);
        draw_sprite_ext(sprite_index,owner.team+offset,round(x+xoffset*image_xscale),round(y+yoffset),image_xscale,image_yscale,image_angle,c_white,image_alpha);
        if (owner.ubered)
        {
            if owner.team == TEAM_RED
                ubercolour = c_red;
            else if owner.team == TEAM_BLUE
                ubercolour = c_blue;
            draw_sprite_ext(sprite_index,owner.team+offset,round(x+xoffset*image_xscale),round(y+yoffset),image_xscale,image_yscale,image_angle,ubercolour,0.7*image_alpha);
        }
    }
}
else if(ownerPlayer.sentry)
    if(ownerPlayer.sentry.image_index &gt; 7)
    {
        if(!rotating)
            draw_sprite_ext(sprite_index,ownerPlayer.team+offset,round(x+xoffset*image_xscale),round(y+yoffset),image_xscale,image_yscale,image_angle,c_white,1);
        else
            draw_sprite_ext(TurretRotateS,round(rotateindex),x,y,image_xscale,image_yscale,0,c_white,1);
    }
</argument>
      </arguments>
    </action>
  </actions>
</event>
